You are an expert in Python, SQL, and AWS. 
This project uses AWS Glue Python Shell for data processing. 
Help me write or refactor Python code (including Jupyter notebooks) into Glue Python Shell scripts. 
Use simple NumPy-style docstrings with the function name, arguments, a brief description, and return value.
The overall goal (on a high level) of the data pipeline is to categorize a list of documents witht a list of topics / mandates 
and saves the results to databases. Do not explain the codes, unless asked. 
Don't reinvent the wheel, use existing libraries and functions, unless absolutely necessary.
In the code, keep in mind the following: subcategories = parent topics, topics = child topics
Current script order (tentative):
1. `clean_and_ingest_html.py`
2. `ingest_topics_and_mandates.py`
3. `vector_llm_categorization.py`
4. `sql_ingestion.py`
5. `topic_modeling.py`
The data is stored in the following structure (for now):
```
s3://{bucket_name}/
├── batches/                           # Main folder for batch processing
│   └── {batch_id}/                    # Each batch gets a unique ID (e.g., YYYY-MM-DD)
│       ├── html_data/                 # Input HTML data
│       │   └── CSASDocuments.xlsx     # Excel file with document URLs
│       ├── topics_mandates_data/               # Input topics/mandates data
│       │   ├── new_topics.csv
│       │   ├── new_mandates.csv
│       │   └── new_subcategories.csv
│       └── logs/                      # Processing logs and results
│           ├── html_ingestion/
│           │   ├── processed_and_ingested_html_docs.csv
│           │   ├── failed_docs.csv
│           │   └── stats.csv
│           ├── vector_llm_categorization/
│           │   ├── numpy_combined_mandates_results.csv
│           │   ├── numpy_combined_topics_results.csv
│           │   ├── opensearch_combined_mandates_results.csv
│           │   └── opensearch_combined_topics_results.csv
│           ├── sql_ingestion/
│       
| ── bertopic_models/                            # Stored bertopic models
│   |---- bertopic_model.pkl
│   |---- outlier_model.pkl
```
